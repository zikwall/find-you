{"version":3,"sources":["components/main/Main.js","components/icons/Heart.js","App.js","index.js"],"names":["getAge","age","getCity","city","getProfile","id","getImage","details","url","Actions","size","stretched","style","marginRight","level","component","href","UserItem","firstname","thumbnail","photo","description","bottomContent","before","src","state","imageFile","imageUlr","isLoadImage","response","isProcessed","onFormSubmit","e","a","preventDefault","setState","fileUpload","data","res","faceBoxes","get","onChange","target","files","file","formData","FormData","append","post","headers","isVisisbleSearchButton","place","icon","this","maxWidth","maxHeight","URL","createObjectURL","alt","resultContent","display","alignItems","flexDirection","marginTop","results","title","map","i","c","key","userid","button","onSubmit","top","React","Component","Heart","width","height","viewBox","transform","fill","d","attributeName","type","values","dur","repeatCount","additive","connect","send","App","useState","activeView","activePanel","ReactDOM","render","document","getElementById"],"mappings":"uXAMMA,EAAS,SAACC,GACZ,OAAOA,GAAsB,qBAARA,EAAsB,+CAAcA,EAAM,gGAG7DC,EAAU,SAACC,GACb,OAAOA,GAAuB,oBAARA,EAAsBA,EAAO,oFAGjDC,EAAa,SAACC,GAChB,MAAM,oBAAN,OAA2BA,IAGzBC,EAAW,SAACC,GACd,MAAyB,oBAAdA,EAAQ,GACRA,EAAQ,GAAGC,IAGG,oBAAdD,EAAQ,GACRA,EAAQ,GAAGC,SADtB,GAKEC,EAAU,SAAC,GAAiB,EAAfN,KAAgB,IAAVE,EAAS,EAATA,GACrB,OACI,kBAAC,IAAD,CAAQK,KAAK,IAAIC,WAAS,EAACC,MAAO,CAAEC,YAAa,GAAKC,MAAM,YAAYC,UAAU,IAAIC,KAAOZ,EAAWC,IAAxG,iDAIFY,EAAW,SAAC,GAAsD,IAApDC,EAAmD,EAAnDA,UAAWjB,EAAwC,EAAxCA,IAAKE,EAAmC,EAAnCA,KAAMI,EAA6B,EAA7BA,QAASY,EAAoB,EAApBA,UAAWd,EAAS,EAATA,GAC1D,OACI,kBAAC,IAAD,CAAMe,MAAQD,EACRE,YAAcrB,EAAOC,GAAO,KAAOC,EAAQC,GAC3CmB,cAAgB,kBAAC,EAAD,CAASnB,KAAOA,EAAOE,GAAKA,IAC5CkB,OAAQ,kBAAC,IAAD,CAAQC,IAAMlB,EAASC,GAAWG,KAAM,KAChDA,KAAK,KAELQ,I,6MAMVO,MAAO,CACHC,UAAW,KACXC,SAAU,KACVC,aAAa,EACbC,SAAU,KACVC,aAAa,G,EAGjBC,a,uCAAe,WAAOC,GAAP,eAAAC,EAAA,6DACXD,EAAEE,iBAEF,EAAKC,SAAS,CACVL,aAAa,IAJN,SAOU,EAAKM,WAAW,EAAKX,MAAMC,WAPrC,UASsB,qBAF7BG,EAPO,QASSQ,KAAKC,IATd,uBAUP,EAAKH,SAAS,CACVL,aAAa,IAXV,6BAqBgC,qBAAhCD,EAASQ,KAAKC,IAAIC,UArBlB,kCAsBUC,cAAI,0DAtBd,QAsBPX,EAtBO,gCAyBL,EAAKM,SAAS,CAChBN,SAAUA,EAASQ,KAAKC,IACxBR,aAAa,IA3BN,4C,wDA+BfW,SAAW,SAACT,GACR,EAAKG,SAAS,CACVT,UAAWM,EAAEU,OAAOC,MAAM,GAC1Bf,YAAkC,aAArBI,EAAEU,OAAOC,MAAM,M,EAIpCP,WAAa,SAACQ,GACV,IACMC,EAAW,IAAIC,SACrBD,EAASE,OAAO,YAAaH,GAO7B,OAAOI,eATK,+CASKH,EANF,CACXI,QAAS,CACL,eAAgB,0B,EAO5BC,uBAAyB,WACrB,OAA+B,MAAxB,EAAKzB,MAAMC,YAAgD,IAA3B,EAAKD,MAAMK,a,wEAKlD,IAAIqB,EACI,kBAAC,IAAD,CACIC,KAAM,kBAAC,IAAD,OADV,sLAMuB,IAA3BC,KAAK5B,MAAMG,cACXuB,EACI,kBAAC,IAAD,KACI,yBAAKvC,MAAO,CAAC0C,SAAU,OAAQC,UAAW,QAAS/B,IAAMgC,IAAIC,gBAAgBJ,KAAK5B,MAAMC,WAAagC,IAAI,UAIrH,IAAIC,EAA0C,GAA1BN,KAAK5B,MAAMK,YACzB,2SAEF,yBAAKlB,MAAO,CAAEgD,QAAS,OAAQC,WAAY,SAAUC,cAAe,WAChE,kBAAC,IAAD,CAASpD,KAAK,QAAQE,MAAO,CAAEmD,UAAW,OAG9CC,EACA,kBAAC,IAAD,CACIC,MAAM,yFAEJN,GAGiB,MAAvBN,KAAK5B,MAAMI,WACXmC,EAAUX,KAAK5B,MAAMI,SAASQ,KAAK6B,KAAI,SAACC,EAAGC,GACvC,OACI,kBAAC,EAAD,CAAUC,IAAMD,EACNlD,UAAYiD,EAAEjD,UACdX,QAAU4D,EAAE5D,QACZY,UAAYgD,EAAEhD,UACdlB,IAAMkE,EAAElE,IACRE,KAAOgE,EAAEhE,KACTE,GAAK8D,EAAEG,aAM7B,IAAIC,EAASlB,KAAKH,yBACZ,kBAAC,IAAD,CAAQxC,KAAK,MAAb,4GACA,KAEN,OACI,oCACMyC,EAEF,kBAAC,IAAD,CAAYqB,SAAWnB,KAAKtB,cACxB,kBAAC,IAAD,CAAMU,SAAWY,KAAKZ,SAChBgC,IAAI,sHACJlD,OAAQ,kBAAC,IAAD,MACRb,KAAK,KAAKI,MAAM,cAEpByD,GAGN,kBAAC,IAAD,CAAON,MAAM,gEACPD,Q,GA/HOU,IAAMC,WC3BpBC,EAlBD,WACV,OACQ,yBAAKC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,iBAChC,uBAAGC,UAAU,sBACT,0BAAMA,UAAU,qBAAqBC,KAAK,SAASC,EAAE,kMACrD,sCACIC,cAAc,YACdC,KAAK,QACLC,OAAO,6BACPC,IAAI,KACJC,YAAY,aACZC,SAAS,WCHjCC,IAAQC,KAAK,eAAgB,IAE7B,IAiBeC,EAjBH,WAAO,IAAD,EACsBC,mBAAS,SAD/B,mBACPC,EADO,UAGd,OACI,kBAAC,IAAD,CAAMA,WAAaA,GACf,kBAAC,IAAD,CAAMC,YAAY,WAAWzF,GAAG,SAC5B,kBAAC,IAAD,CAAOA,GAAG,YACN,kBAAC,IAAD,oDAAsB,kBAAC,EAAD,OACtB,kBAAC,EAAD,MAEA,kBAAC,IAAD,iCClBpB0F,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e9a9bb9f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Div, File, FormLayout, Button, Placeholder, Group, Cell, Avatar, Spinner } from \"@vkontakte/vkui\";\r\nimport Icon24Document from '@vkontakte/icons/dist/24/document';\r\nimport Icon56UsersOutline from '@vkontakte/icons/dist/56/users_outline';\r\nimport { post, get } from 'axios';\r\n\r\nconst getAge = (age) => {\r\n    return age && typeof age !== 'undefined' ? 'Возраст: ' + age : 'Возраст не указан';\r\n};\r\n\r\nconst getCity = (city) => {\r\n    return city && typeof city != 'undefined' ? city : 'Город не указан';\r\n};\r\n\r\nconst getProfile = (id) => {\r\n    return `https://vk.com/id${id}`;\r\n};\r\n\r\nconst getImage = (details) => {\r\n    if (typeof details[1] != 'undefined') {\r\n        return details[1].url;\r\n    }\r\n\r\n    if (typeof details[0] != 'undefined') {\r\n        return details[0].url;\r\n    }\r\n};\r\n\r\nconst Actions = ({ city, id }) => {\r\n    return (\r\n        <Button size=\"l\" stretched style={{ marginRight: 5 }} level=\"secondary\" component=\"a\" href={ getProfile(id) }> Профиль </Button>\r\n    );\r\n};\r\n\r\nconst UserItem = ({ firstname, age, city, details, thumbnail, id }) => {\r\n    return (\r\n        <Cell photo={ thumbnail }\r\n              description={ getAge(age) + ', ' + getCity(city) }\r\n              bottomContent={ <Actions city={ city } id={ id }/> }\r\n              before={<Avatar src={ getImage(details) } size={80}/> }\r\n              size=\"l\"\r\n        >\r\n            { firstname }\r\n        </Cell>\r\n    );\r\n};\r\n\r\nexport default class extends React.Component {\r\n    state ={\r\n        imageFile: null,\r\n        imageUlr: null,\r\n        isLoadImage: false,\r\n        response: null,\r\n        isProcessed: false,\r\n    };\r\n\r\n    onFormSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        this.setState({\r\n            isProcessed: true\r\n        });\r\n\r\n        let response = await this.fileUpload(this.state.imageFile);\r\n\r\n        if (typeof response.data.res === 'undefined') {\r\n            this.setState({\r\n                isProcessed: false\r\n            });\r\n\r\n            return ;\r\n        }\r\n\r\n        /**\r\n         * TODO\r\n         * if many faces draw boxes for select face and next confirm\r\n         */\r\n        if (typeof response.data.res.faceBoxes !== 'undefined') {\r\n            response = await get('https://zikwall.ru/findyouapi/recognize/confirm?face=0');\r\n        }\r\n\r\n        await this.setState({\r\n            response: response.data.res,\r\n            isProcessed: false\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            imageFile: e.target.files[0],\r\n            isLoadImage: e.target.files[0] != 'undefined'\r\n        });\r\n    };\r\n\r\n    fileUpload = (file) => {\r\n        const url = 'https://zikwall.ru/findyouapi/recognize/face';\r\n        const formData = new FormData();\r\n        formData.append('imageFile', file);\r\n        const config = {\r\n            headers: {\r\n                'content-type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        return post(url, formData, config)\r\n    };\r\n\r\n    isVisisbleSearchButton = () => {\r\n        return this.state.imageFile != null && this.state.isProcessed === false;\r\n    };\r\n\r\n    render() {\r\n\r\n        let place =\r\n                <Placeholder\r\n                    icon={<Icon56UsersOutline  />}\r\n                >\r\n                    Загрузите изображение для поиска\r\n                </Placeholder>;\r\n\r\n        if (this.state.isLoadImage === true) {\r\n            place =\r\n                <Div>\r\n                    <img style={{maxWidth: '100%', maxHeight: '100%'}} src={ URL.createObjectURL(this.state.imageFile) } alt=\"alt\"/>\r\n                </Div>\r\n        }\r\n\r\n        let resultContent = this.state.isProcessed == false\r\n            ? 'Здесь будут отображаться люди, которых вы возможно ищите'\r\n            :\r\n            <div style={{ display: 'flex', alignItems: 'center', flexDirection: 'column' }}>\r\n                <Spinner size=\"large\" style={{ marginTop: 20 }} />\r\n            </div>;\r\n\r\n        let results =\r\n            <Placeholder\r\n                title=\"Находите друзей\"\r\n            >\r\n                { resultContent }\r\n            </Placeholder>;\r\n\r\n        if (this.state.response != null) {\r\n            results = this.state.response.data.map((i, c) => {\r\n                return (\r\n                    <UserItem key={ c }\r\n                              firstname={ i.firstname }\r\n                              details={ i.details }\r\n                              thumbnail={ i.thumbnail }\r\n                              age={ i.age }\r\n                              city={ i.city }\r\n                              id={ i.userid }\r\n                    />\r\n                )\r\n            })\r\n        }\r\n\r\n        let button = this.isVisisbleSearchButton()\r\n            ? <Button size=\"xl\">Пожалуйста найдись!</Button>\r\n            : null;\r\n\r\n        return (\r\n            <>\r\n                { place }\r\n\r\n                <FormLayout onSubmit={ this.onFormSubmit }>\r\n                    <File onChange={ this.onChange }\r\n                          top=\"Загрузите фотографию\"\r\n                          before={<Icon24Document />}\r\n                          size=\"xl\" level=\"secondary\"\r\n                    />\r\n                    { button }\r\n                </FormLayout>\r\n\r\n                <Group title=\"Результаты\">\r\n                    { results }\r\n                </Group>\r\n            </>\r\n        );\r\n    }\r\n}","import React from  'react';\r\n\r\nconst Heart = () => {\r\n    return (\r\n            <svg width=\"30\" height=\"30\" viewBox=\"0 -20 200 200\">\r\n                <g transform=\"translate(100 100)\">\r\n                    <path transform=\"translate(-50 -50)\" fill=\"tomato\" d=\"M92.71,7.27L92.71,7.27c-9.71-9.69-25.46-9.69-35.18,0L50,14.79l-7.54-7.52C32.75-2.42,17-2.42,7.29,7.27v0 c-9.71,9.69-9.71,25.41,0,35.1L50,85l42.71-42.63C102.43,32.68,102.43,16.96,92.71,7.27z\"></path>\r\n                    <animateTransform\r\n                        attributeName=\"transform\"\r\n                        type=\"scale\"\r\n                        values=\"1; 1.5; 1.25; 1.5; 1.5; 1;\"\r\n                        dur=\"1s\"\r\n                        repeatCount=\"indefinite\"\r\n                        additive=\"sum\">\r\n                    </animateTransform>\r\n                </g>\r\n            </svg>\r\n    )\r\n};\r\n\r\nexport default Heart;","import 'core-js/es/map';\r\nimport 'core-js/es/set';\r\n\r\nimport React, { useState } from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport connect from \"@vkontakte/vk-connect\";\r\nimport { Root, View, Panel, PanelHeader, Footer } from \"@vkontakte/vkui\";\r\nimport { Main } from \"./components/main\";\r\nimport { Heart } from './components/icons';\r\n\r\nconnect.send(\"VKWebAppInit\", {});\r\n\r\nconst App = () => {\r\n    const [activeView, setActiveView] = useState('view1');\r\n\r\n    return (\r\n        <Root activeView={ activeView }>\r\n            <View activePanel=\"panel1.1\" id=\"view1\">\r\n                <Panel id=\"panel1.1\">\r\n                    <PanelHeader>Ищу тебя <Heart /></PanelHeader>\r\n                    <Main/>\r\n\r\n                    <Footer> status:@dev-v1.1.4 </Footer>\r\n                </Panel>\r\n            </View>\r\n        </Root>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}